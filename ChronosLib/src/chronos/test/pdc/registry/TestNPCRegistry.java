/**
 * TestNPCRegistry.java Copyright (c) 2017, Alan Cline. All Rights Reserved.
 * 
 * Permission to make digital or hard copies of all or parts of this work for commercial use is
 * prohibited. To republish, to post on servers, to reuse, or to redistribute to lists, requires
 * prior specific permission and/or a fee. Request permission to use from acline@carolla.com.
 */

package chronos.test.pdc.registry;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.fail;

import java.util.ArrayList;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import chronos.pdc.NPC;
import chronos.pdc.registry.NPCRegistry;
import mylib.MsgCtrl;

/**
 * @author --generated by QA Tool--
 * @version July 31, 2017 // original <br>
 *          Aug 9, 2017 // updated to add another NPC and generalize tests <br>
 */
public class TestNPCRegistry
{
  static private NPCRegistry _npcReg;
  
  private final int NBR_NPCS = 17;


  /**
   * @throws java.lang.Exception -- general catch-all for exceptions not caught by the tests
   */
  @BeforeClass
  public static void setUpBeforeClass() throws Exception
  {
    _npcReg = new NPCRegistry();
    assertNotNull(_npcReg);
  }

  /**
   * @throws java.lang.Exception -- general catch-all for exceptions not caught by the tests
   */
  @AfterClass
  public static void tearDownAfterClass() throws Exception
  {
    _npcReg = null;
  }

  /**
   * @throws java.lang.Exception -- general catch-all for exceptions not caught by the tests
   */
  @Before
  public void setUp() throws Exception
  {}

  /**
   * @throws java.lang.Exception -- general catch-all for exceptions not caught by the tests
   */
  @After
  public void tearDown() throws Exception
  {
    MsgCtrl.auditMsgsOn(false);
    MsgCtrl.errorMsgsOn(false);
  }


  // ===============================================================================
  // BEGIN TESTING
  // ===============================================================================

  /**
   * @Normal.Test NPCRegistry() -- confirm data is ok
   */
  @Test
  public void testCtor()
  {
    MsgCtrl.auditMsgsOn(false);
    MsgCtrl.errorMsgsOn(false);
    MsgCtrl.where(this);

    // Verify: there are the correct number of NPCs in the registry
    ArrayList<NPC> entryList = (ArrayList<NPC>) _npcReg.getAll();
    assertNotNull(entryList);
    int len = entryList.size();
    MsgCtrl.msgln("\t There are " + len + " NPCs in the registry");
    assertEquals(NBR_NPCS, len);

    // Trying to get one more should lead to an error
    try {
      entryList.get(NBR_NPCS).getName();
      fail(MsgCtrl.EXCEPTION_NOT_THROWN);
    } catch (IndexOutOfBoundsException ibex) {
      MsgCtrl.msgln(MsgCtrl.EXP_EXCEPTION + ibex.getMessage());
    }
  }


  /**
   * @Not.Needed NPC getNPC(String) -- getter
   */
  @Test
  public void testGetNPC()
  {
    MsgCtrl.auditMsgsOn(false);
    MsgCtrl.errorMsgsOn(false);
    MsgCtrl.where(this);
    MsgCtrl.msgln(MsgCtrl.NOTEST + MsgCtrl.GETTER);
  }


  /**
   * @Not.Needed void initialize() -- tested above
   */
  @Test
  public void testInitialize()
  {
    MsgCtrl.auditMsgsOn(false);
    MsgCtrl.errorMsgsOn(false);
    MsgCtrl.where(this);
    MsgCtrl.msgln(MsgCtrl.NOTEST + MsgCtrl.PRIMITIVE);
  }


} // end of TestNPCRegistry.java class
