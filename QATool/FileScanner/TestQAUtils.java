/**
 * TestQAUtils.java Copyright (c) 2017, Alan Cline. All Rights Reserved.
 * 
 * Permission to make digital or hard copies of all or parts of this work for commercial use is
 * prohibited. To republish, to post on servers, to reuse, or to redistribute to lists, requires
 * prior specific permission and/or a fee. Request permission to use from acline@carolla.com.
 */

package test.pdc;

import static org.junit.Assert.assertEquals;

import java.util.ArrayList;
import java.util.Arrays;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import mylib.MsgCtrl;
import pdc.QAUtils;

/**
 * Tests the utility class {@code QAUtils.java} which contains a collection of static methods
 * 
 * @author --generated by QA Tool--
 * @version April 29, 2017 // original <br>
 */
public class TestQAUtils
{
   /**
    * @throws java.lang.Exception -- general catchall for exceptions not caught by the tests
    */
   @BeforeClass
   public static void setUpBeforeClass() throws Exception
   {}

   /**
    * @throws java.lang.Exception -- general catchall for exceptions not caught by the tests
    */
   @AfterClass
   public static void tearDownAfterClass() throws Exception
   {}

   /**
    * @throws java.lang.Exception -- general catchall for exceptions not caught by the tests
    */
   @Before
   public void setUp() throws Exception
   {}

   /**
    * @throws java.lang.Exception -- general catchall for exceptions not caught by the tests
    */
   @After
   public void tearDown() throws Exception
   {
      MsgCtrl.auditMsgsOn(false);
      MsgCtrl.errorMsgsOn(false);
   }


   // ===============================================================================
   // BEGIN TESTING
   // ===============================================================================

   /**
    * Normal Test: ArrayList getMethods(String) -- return the methods in .class file associated with
    * the source path
    */
   @Test
   public void testGetMethods()
   {
      MsgCtrl.auditMsgsOn(false);
      MsgCtrl.errorMsgsOn(false);
      MsgCtrl.where(this);

      // SETUP Create target Class from outside the project
      String targetPath = "/Projects/eChronos/QATool/FileScanner/src/pdc/TripleMap.java";
      // Initialize a set of src methods
      ArrayList<String> expList = new ArrayList<>(Arrays.asList(
            "Map buildAugMap()", "ArrayList export(TripleMap$NameType)",
                  "void setMapList(TripleMap$NameType, ArrayList)"));

      // RUN
      ArrayList<String> resultList = QAUtils.getMethods(targetPath);
      MsgCtrl.auditPrintList("\tMethods found: ", resultList);
      // VERIFY
      assertEquals(3, resultList.size());
      for (int k=0; k < resultList.size(); k++) {
         assertEquals(expList.get(k), resultList.get(k));
      }
   }


   /**
    * Null Test: ArrayList getMethods(null) -- returns NullPointerException
    */
   @Test
   public void testGetMethods_NullParm_Exception()
   {
      MsgCtrl.auditMsgsOn(false);
      MsgCtrl.errorMsgsOn(false);
      MsgCtrl.where(this);

      // RUN
      try {
         QAUtils.getMethods(null);
      } catch (NullPointerException ex) {
         MsgCtrl.errMsgln("\t Expected exception for null parms");
      }
   }


   // ===============================================================================
   // PRIVATE HELPER METHODS
   // ===============================================================================



} 	// end of TestQAUtils.java class
