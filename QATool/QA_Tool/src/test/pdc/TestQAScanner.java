/**
 * TestQAScanner.java Copyright (c) 2016, Carolla Development, Inc. All Rights Reserved
 * 
 * Permission to make digital or hard copies of all or parts of this work for commercial use is
 * prohibited. To republish, to post on servers, to reuse, or to redistribute to lists, requires
 * prior specific permission and/or a fee. Request permission to use from Carolla Development, Inc.
 * by email: acline@carolla.com
 */


package test.pdc;

import static org.junit.Assert.fail;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import mylib.MsgCtrl;

/**
 * @author --generated by QA Tool--
 * @version July 21, 2016 // original <br>
 *          July 26, 2016 // autogen: QA Tool added missing test methods <br>
 *          August 1, 2016 // autogen: QA Tool added missing test methods <br>
 *          August 3, 2016 // autogen: QA Tool added missing test methods <br>
 */
public class TestQAScanner
{
   /**
    * @throws java.lang.Exception
    */
   @BeforeClass
   public static void setUpBeforeClass() throws Exception
   {}

   /**
    * @throws java.lang.Exception
    */
   @AfterClass
   public static void tearDownAfterClass() throws Exception
   {}

   /**
    * @throws java.lang.Exception
    */
   @Before
   public void setUp() throws Exception
   {}

   /**
    * @throws java.lang.Exception
    */
   @After
   public void tearDown() throws Exception
   {
      MsgCtrl.auditMsgsOn(false);
      MsgCtrl.errorMsgsOn(false);
   }

   /**
    * @NORMAL_TEST ArrayList collectMethods(String)
    */
   @Test
   public void testCollectMethods()
   {
      MsgCtrl.auditMsgsOn(false);
      MsgCtrl.errorMsgsOn(false);
      MsgCtrl.where(this);

      fail("\t\tNot yet implemented");
   }

   /**
    * @NORMAL_TEST Class convertSourceToClass(String)
    */
   @Test
   public void testConvertSourceToClass()
   {
      MsgCtrl.auditMsgsOn(false);
      MsgCtrl.errorMsgsOn(false);
      MsgCtrl.where(this);

      fail("\t\tNot yet implemented");
   }

   /**
    * @NORMAL_TEST String extractSignature(Method, String)
    */
   @Test
   public void testExtractSignature()
   {
      MsgCtrl.auditMsgsOn(false);
      MsgCtrl.errorMsgsOn(false);
      MsgCtrl.where(this);

      fail("\t\tNot yet implemented");
   }

   /**
    * @NORMAL_TEST void outList(String, List)
    */
   @Test
   public void testOutList()
   {
      MsgCtrl.auditMsgsOn(false);
      MsgCtrl.errorMsgsOn(false);
      MsgCtrl.where(this);

      fail("\t\tNot yet implemented");
   }

   /**
    * @NORMAL_TEST void outMsg(String)
    */
   @Test
   public void testOutMsg()
   {
      MsgCtrl.auditMsgsOn(false);
      MsgCtrl.errorMsgsOn(false);
      MsgCtrl.where(this);

      fail("\t\tNot yet implemented");
   }

   /**
    * @NORMAL_TEST String simplifyDeclaration(String)
    */
   @Test
   public void testSimplifyDeclaration()
   {
      MsgCtrl.auditMsgsOn(false);
      MsgCtrl.errorMsgsOn(false);
      MsgCtrl.where(this);

      fail("\t\tNot yet implemented");
   }

   /**
    * @NORMAL_TEST String simplifyReturnType(String)
    */
   @Test
   public void testSimplifyReturnType()
   {
      MsgCtrl.auditMsgsOn(false);
      MsgCtrl.errorMsgsOn(false);
      MsgCtrl.where(this);

      fail("\t\tNot yet implemented");
   }

   /**
    * @NORMAL_TEST void qaReport()
    */
   @Test
   public void testQaReport()
   {
      MsgCtrl.auditMsgsOn(true);
      MsgCtrl.errorMsgsOn(true);
      MsgCtrl.where(this);

      MsgCtrl.errMsgln("\t\t TEST METHOD NOT YET IMPLEMENTED");
   }

   /**
    * @NORMAL_TEST void treeScan()
    */
   @Test
   public void testTreeScan()
   {
      MsgCtrl.auditMsgsOn(true);
      MsgCtrl.errorMsgsOn(true);
      MsgCtrl.where(this);

      MsgCtrl.errMsgln("\t\t TEST METHOD NOT YET IMPLEMENTED");
   }

} 	// end of TestQAScanner.java class
